<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<!--
   Floors.plist
   Delve

   Created by Theodore Abshire on 3/4/16.
   Copyright (c) 2016 Theodore Abshire. All rights reserved.
-->
<plist version="1.0">
<dict>
	<!-- design guideline -->
	<!-- the values I start with for countdown should be around 2.5 * (room size) * (desired path length) + 10 * (number encounters) -->
	<!-- with some extra padding and such, obviously -->
	<!-- overtime countdown should be shorter, obviously, maybe (room size) * (desired path length) * 0.5 -->
	
	<!-- TODO: important design note: -->
	<!-- overtime countdown should always be a multiple of 5 -->
	
	
	<!-- floor 0 -->
	<!-- theme: cave and ruins -->
	<!-- enemy types: ruin feeders and slimes -->
	<!-- color: blue -->
	<key>floor 0</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>default</string>
		<key>default color</key> <string>tile stone blue</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>8</integer>
		<key>columns</key> <integer>5</integer>
		<key>reject undiscovered doors chance</key> <integer>40</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>5</integer>
		<key>min non orphans</key> <integer>15</integer>
		<key>max non orphans</key> <integer>35</integer>
		<key>locked door chance</key> <integer>35</integer>
		<key>no door chance</key> <integer>25</integer>
		<key>desired path length</key> <integer>11</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>58</integer>
		<key>cave smooths</key> <integer>1</integer>
		<key>min floor tile percent</key> <integer>40</integer>
		<key>max floor tile percent</key> <integer>60</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>230</integer>
		<key>overtime countdown</key> <integer>30</integer>
		<key>equipment treasures</key> <integer>4</integer>
		<key>healing treasures</key> <integer>4</integer>
		<key>normal treasures</key> <integer>3</integer>
		<key>healing item</key> <string>bread</string>
		<key>number of encounters</key> <integer>5</integer>
		<key>start equipment treasures</key> <integer>1</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>ruin feeder runt</string>
				<string>slime</string>
			</array>
			<array>
				<string>ruin feeder</string>
			</array>
		</array>
		<key>guardian type</key> <string>jury-rigged guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: burn > shock > smash = cut -->
	<!-- player resistance ranking: cut > burn = shock = smash -->
	<!-- special features: counter-attacks -->
	<!-- guardian: cut attack, cut casing -->
	<!-- ideal build: someone with energy and a little bit of cut resistance (ie shield) -->
	
	
	<!-- floor 1 -->
	<!-- theme: cave with a little bit of ruins -->
	<!-- enemy types: human bandits and a few ruin feeders -->
	<!-- color: blue -->
	<key>floor 1</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>bandit</string>
		<key>default color</key> <string>tile stone blue</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>10</integer>
		<key>columns</key> <integer>6</integer>
		<key>reject undiscovered doors chance</key> <integer>60</integer>
		<key>max door offset</key> <integer>2</integer>
		<key>doors at a time</key> <integer>7</integer>
		<key>min non orphans</key> <integer>20</integer>
		<key>max non orphans</key> <integer>50</integer>
		<key>locked door chance</key> <integer>15</integer>
		<key>no door chance</key> <integer>25</integer>
		<key>desired path length</key> <integer>13</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>45</integer>
		<key>cave smooths</key> <integer>2</integer>
		<key>min floor tile percent</key> <integer>50</integer>
		<key>max floor tile percent</key> <integer>70</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>260</integer>
		<key>overtime countdown</key> <integer>40</integer>
		<key>equipment treasures</key> <integer>4</integer>
		<key>healing treasures</key> <integer>7</integer>
		<key>normal treasures</key> <integer>5</integer>
		<key>healing item</key> <string>bread</string>
		<key>number of encounters</key> <integer>8</integer>
		<key>start equipment treasures</key> <integer>3</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>trained ruin feeder</string>
				<string>trained ruin feeder</string>
			</array>
			<array>
				<string>bandit</string>
				<string>bandit</string>
			</array>
			<array>
				<string>torch bandit</string>
				<string>torch bandit</string>
			</array>
			<array>
				<string>torch bandit</string>
				<string>bandit</string>
			</array>
			<array>
				<string>trained ruin feeder</string>
				<string>bandit</string>
			</array>
			<array>
				<string>archer bandit</string>
			</array>
			<array>
				<string>hammer bandit</string>
			</array>
		</array>
		<key>guardian type</key> <string>stolen guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: smash > burn = shock > cut -->
	<!-- player resistance ranking: cut > smash > burn > shock -->
	<!-- special features: delayed attacks, ranged attacks -->
	<!-- guardian: burn attack, shock casing -->
	<!-- ideal build: probably a straightforward armored-ey warrior guy with hammer (though note everyone has one dodge!) -->
	
	
	<!-- floor 2 -->
	<!-- theme: eol habitat -->
	<!-- enemy types: robots -->
	<!-- color: blue-grey -->
	<key>floor 2</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>habitat</string>
		<key>default color</key> <string>tile stone faded blue</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>9</integer>
		<key>columns</key> <integer>6</integer>
		<key>reject undiscovered doors chance</key> <integer>60</integer>
		<key>max door offset</key> <integer>0</integer>
		<key>doors at a time</key> <integer>6</integer>
		<key>min non orphans</key> <integer>20</integer>
		<key>max non orphans</key> <integer>53</integer>
		<key>locked door chance</key> <integer>35</integer>
		<key>no door chance</key> <integer>25</integer>
		<key>desired path length</key> <integer>7</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>70</integer>
		<key>cave smooths</key> <integer>1</integer>
		<key>min floor tile percent</key> <integer>40</integer>
		<key>max floor tile percent</key> <integer>60</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>275</integer>
		<key>overtime countdown</key> <integer>25</integer>
		<key>equipment treasures</key> <integer>4</integer>
		<key>healing treasures</key> <integer>5</integer>
		<key>normal treasures</key> <integer>3</integer>
		<key>healing item</key> <string>bread</string>
		<key>number of encounters</key> <integer>7</integer>
		<key>start equipment treasures</key> <integer>4</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>sentry</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>sentry</string>
				<string>scuttler</string>
				<string>scuttler</string>
			</array>
			<array>
				<string>scuttler</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
		</array>
		<key>guardian type</key> <string>stone guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: shock > cut > smash > burn -->
	<!-- player resistance ranking: shock > cut > smash = burn -->
	<!-- special features: ranged attacks, position swapping -->
	<!-- guardian: smash attack, smash casing -->
	<!-- ideal build: you can have level 3 energy by this point, and holy flash should be pretty useful here; couple with a defensive skill or two (shield?) -->
	
	
	<!-- floor 3 -->
	<!-- theme: habitat maze -->
	<!-- enemy types: eoling zealots -->
	<!-- it has no drops, because it will end up with a LOT of locked-only areas -->
	<!-- color: blue-grey -->
	<key>floor 3</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>habitat</string>
		<key>default color</key> <string>tile stone faded blue</string>
		<!-- map generation data -->
		<key>room size</key> <integer>3</integer>
		<key>rows</key> <integer>11</integer>
		<key>columns</key> <integer>10</integer>
		<key>reject undiscovered doors chance</key> <integer>30</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>10</integer>
		<key>min non orphans</key> <integer>40</integer>
		<key>max non orphans</key> <integer>85</integer>
		<key>locked door chance</key> <integer>45</integer>
		<key>no door chance</key> <integer>50</integer>
		<key>desired path length</key> <integer>22</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>0</integer>
		<key>cave smooths</key> <integer>0</integer>
		<key>min floor tile percent</key> <integer>0</integer>
		<key>max floor tile percent</key> <integer>0</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>305</integer>
		<key>overtime countdown</key> <integer>25</integer>
		<key>equipment treasures</key> <integer>0</integer>
		<key>healing treasures</key> <integer>5</integer>
		<key>normal treasures</key> <integer>0</integer>
		<key>healing item</key> <string>cheese</string>
		<key>number of encounters</key> <integer>8</integer>
		<key>start equipment treasures</key> <integer>1</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>eoling zealot</string>
				<string>eoling zealot</string>
				<string>eoling zealot</string>
			</array>
			<array>
				<string>eoling zealot</string>
				<string>eoling zealot</string>
				<string>eoling zealot</string>
			</array>
			<array>
				<string>eoling priest</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>eoling dancer</string>
				<string>scuttler</string>
				<string>scuttler</string>
			</array>
		</array>
		<key>guardian type</key> <string>prayer guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: cut > burn = shock > smash -->
	<!-- player resistance ranking: shock > cut = smash > burn -->
	<!-- special features: counter-attacks, undodgeable attacks, ranged attacks, dodges, position-swapping -->
	<!-- guardian: shock attack, smash casing -->
	<!-- ideal build: someone with undodgeable cut attacks (dagger would be good) and maybe a little shock for the sentries -->
	
	
	<!-- floor 4 -->
	<!-- theme: underground forest -->
	<!-- enemy types: higher-level ruin feeders and slimes -->
	<!-- color: grey -->
	<key>floor 4</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>forest</string>
		<key>default color</key> <string>tile stone grey</string>
		<!-- map generation data -->
		<key>room size</key> <integer>7</integer>
		<key>rows</key> <integer>9</integer>
		<key>columns</key> <integer>8</integer>
		<key>reject undiscovered doors chance</key> <integer>50</integer>
		<key>max door offset</key> <integer>3</integer>
		<key>doors at a time</key> <integer>7</integer>
		<key>min non orphans</key> <integer>30</integer>
		<key>max non orphans</key> <integer>60</integer>
		<key>locked door chance</key> <integer>25</integer>
		<key>no door chance</key> <integer>50</integer>
		<key>desired path length</key> <integer>10</integer>
		<key>min doodads per room</key> <integer>2</integer>
		<key>max doodads per room</key> <integer>4</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>40</integer>
		<key>cave smooths</key> <integer>3</integer>
		<key>min floor tile percent</key> <integer>40</integer>
		<key>max floor tile percent</key> <integer>80</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>290</integer>
		<key>overtime countdown</key> <integer>35</integer>
		<key>equipment treasures</key> <integer>3</integer>
		<key>healing treasures</key> <integer>5</integer>
		<key>normal treasures</key> <integer>4</integer>
		<key>healing item</key> <string>cheese</string>
		<key>number of encounters</key> <integer>12</integer>
		<key>start equipment treasures</key> <integer>3</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>ruin feeder</string>
				<string>ruin feeder</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>fierce ruin feeder</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>fierce ruin feeder</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>rabid ruin feeder</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>rabid ruin feeder</string>
				<string>ruin feeder runt</string>
				<string>ruin feeder runt</string>
			</array>
			<array>
				<string>rabid ruin feeder</string>
				<string>rabid ruin feeder</string>
			</array>
		</array>
		<key>guardian type</key> <string>grounded guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: burn = shock > cut > smash -->
	<!-- player resistance ranking: cut > burn = shock = smash -->
	<!-- special features: counter-attacks, poison -->
	<!-- guardian: smash attack, shock casing -->
	<!-- ideal build: similar to floor 1, but burn damage is a bit worse (because the rabids are burn-resistant), and AoEs are more valuable -->
	
	
	<!-- floor 5 -->
	<!-- theme: eol research lab -->
	<!-- enemy types: abominations, slimes, and a few androids -->
	<!-- color: grey -->
	<key>floor 5</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>lab</string>
		<key>default color</key> <string>tile stone grey</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>8</integer>
		<key>columns</key> <integer>6</integer>
		<key>reject undiscovered doors chance</key> <integer>80</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>9</integer>
		<key>min non orphans</key> <integer>20</integer>
		<key>max non orphans</key> <integer>50</integer>
		<key>locked door chance</key> <integer>40</integer>
		<key>no door chance</key> <integer>15</integer>
		<key>desired path length</key> <integer>10</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>4</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>95</integer>
		<key>cave smooths</key> <integer>0</integer>
		<key>min floor tile percent</key> <integer>30</integer>
		<key>max floor tile percent</key> <integer>70</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>250</integer>
		<key>overtime countdown</key> <integer>25</integer>
		<key>equipment treasures</key> <integer>5</integer>
		<key>healing treasures</key> <integer>3</integer>
		<key>normal treasures</key> <integer>3</integer>
		<key>healing item</key> <string>cheese</string>
		<key>number of encounters</key> <integer>9</integer>
		<key>start equipment treasures</key> <integer>4</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>security android</string>
				<string>security android</string>
			</array>
			<array>
				<string>great slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>great slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
			</array>
			<array>
				<string>war abomination</string>
				<string>war abomination</string>
				<string>war abomination</string>
				<string>abomination flinger</string>
			</array>
			<array>
				<string>war abomination</string>
				<string>abomination flinger</string>
				<string>abomination flinger</string>
				<string>abomination flinger</string>
			</array>
			<array>
				<string>war abomination</string>
				<string>war abomination</string>
				<string>war abomination</string>
				<string>war abomination</string>
			</array>
			<array>
				<string>abomination flinger</string>
				<string>abomination flinger</string>
				<string>abomination flinger</string>
				<string>abomination flinger</string>
			</array>
		</array>
		<key>guardian type</key> <string>flame guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: burn = cut > shock > smash -->
	<!-- player resistance ranking: smash > shock > cut = burn -->
	<!-- special features: counter-attacks, poison, ranged attacks -->
	<!-- guardian: burn attack, burn casing -->
	<!-- ideal build: someone who has both burn (for the slimes) and cut (for the aboms); archery could actually be pretty good here -->
	
	
	<!-- floor 6 -->
	<!-- theme: broken eol ship -->
	<!-- enemy types: robots -->
	<!-- very tall and thin; the rooms are small, and the encounters are close together -->
	<!-- color: red-grey -->
	<key>floor 6</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>ship</string>
		<key>default color</key> <string>tile stone faded red</string>
		<!-- map generation data -->
		<key>room size</key> <integer>3</integer>
		<key>rows</key> <integer>11</integer>
		<key>columns</key> <integer>3</integer>
		<key>reject undiscovered doors chance</key> <integer>30</integer>
		<key>max door offset</key> <integer>0</integer>
		<key>doors at a time</key> <integer>7</integer>
		<key>min non orphans</key> <integer>18</integer>
		<key>max non orphans</key> <integer>999</integer>
		<key>locked door chance</key> <integer>35</integer>
		<key>no door chance</key> <integer>75</integer>
		<key>desired path length</key> <integer>12</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>85</integer>
		<key>cave smooths</key> <integer>0</integer>
		<key>min floor tile percent</key> <integer>0</integer>
		<key>max floor tile percent</key> <integer>999</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>250</integer>
		<key>overtime countdown</key> <integer>20</integer>
		<key>equipment treasures</key> <integer>10</integer>
		<key>healing treasures</key> <integer>8</integer>
		<key>normal treasures</key> <integer>6</integer>
		<key>healing item</key> <string>ration</string>
		<key>number of encounters</key> <integer>6</integer>
		<key>start equipment treasures</key> <integer>3</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>scuttler</string>
				<string>scuttler</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>scuttler</string>
				<string>scuttler</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>scuttler</string>
				<string>scuttler</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>scuttler</string>
				<string>sentry</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>scuttler</string>
				<string>scuttler</string>
				<string>scuttler</string>
				<string>sentry</string>
			</array>
			<array>
				<string>war bot</string>
			</array>
		</array>
		<key>guardian type</key> <string>ship guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: shock > smash > burn > cut -->
	<!-- player resistance ranking: shock > cut > smash = burn -->
	<!-- special features: ranged attacks, force-fields, position-swapping, undodgeable attacks, blocks, delayed attacks -->
	<!-- guardian: burn attack, shock casing -->
	<!-- ideal build: probably someone with holy flash for the big crowds of robots, and maybe stealth to sneak past war bots if possible -->
	
	
	<!-- floor 7 -->
	<!-- theme: full cave (do room generation with natural walls too) -->
	<!-- enemy types: raider expedition force (remember to give them raider body armor!) -->
	<!-- color: red-grey -->
	<key>floor 7</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>cave</string>
		<key>default color</key> <string>tile stone faded red</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>11</integer>
		<key>columns</key> <integer>6</integer>
		<key>reject undiscovered doors chance</key> <integer>60</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>5</integer>
		<key>min non orphans</key> <integer>20</integer>
		<key>max non orphans</key> <integer>60</integer>
		<key>locked door chance</key> <integer>0</integer>
		<key>no door chance</key> <integer>80</integer>
		<key>desired path length</key> <integer>12</integer>
		<key>min doodads per room</key> <integer>0</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>40</integer>
		<key>cave smooths</key> <integer>3</integer>
		<key>min floor tile percent</key> <integer>40</integer>
		<key>max floor tile percent</key> <integer>80</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>300</integer>
		<key>overtime countdown</key> <integer>30</integer>
		<key>equipment treasures</key> <integer>5</integer>
		<key>healing treasures</key> <integer>6</integer>
		<key>normal treasures</key> <integer>5</integer>
		<key>healing item</key> <string>ration</string>
		<key>number of encounters</key> <integer>14</integer>
		<key>start equipment treasures</key> <integer>3</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>raider warrior</string>
				<string>raider warrior</string>
			</array>
			<array>
				<string>raider archer</string>
				<string>trained ruin feeder</string>
				<string>trained ruin feeder</string>
				<string>trained ruin feeder</string>
			</array>
			<array>
				<string>raider knight</string>
				<string>raider squire</string>
			</array>
			<array>
				<string>raider specialist</string>
				<string>trained ruin feeder</string>
				<string>trained ruin feeder</string>
			</array>
		</array>
		<key>guardian type</key> <string>strength guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: shock > burn > smash > cut -->
	<!-- player resistance ranking: cut > smash > burn > shock -->
	<!-- special features: ranged attacks, blocks, counter-attacks -->
	<!-- guardian: smash attack, burn casing -->
	<!-- ideal build: holy soldier would be good, for the unblockable shock damage, plus warrior skills for defense -->
	
	
	<!-- floor 8 -->
	<!-- theme: rogue highborn expedition fortress -->
	<!-- enemy types: some highborn with rituals, also lots of human warrior-slaves; ONE person with AoEs per group max, please -->
	<!-- color: red -->
	<key>floor 8</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>bandit</string>
		<key>default color</key> <string>tile stone red</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>8</integer>
		<key>columns</key> <integer>8</integer>
		<key>reject undiscovered doors chance</key> <integer>80</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>3</integer>
		<key>min non orphans</key> <integer>25</integer>
		<key>max non orphans</key> <integer>50</integer>
		<key>locked door chance</key> <integer>35</integer>
		<key>no door chance</key> <integer>25</integer>
		<key>desired path length</key> <integer>11</integer>
		<key>min doodads per room</key> <integer>0</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>45</integer>
		<key>cave smooths</key> <integer>2</integer>
		<key>min floor tile percent</key> <integer>30</integer>
		<key>max floor tile percent</key> <integer>60</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>280</integer>
		<key>overtime countdown</key> <integer>30</integer>
		<key>equipment treasures</key> <integer>6</integer>
		<key>healing treasures</key> <integer>8</integer>
		<key>normal treasures</key> <integer>5</integer>
		<key>healing item</key> <string>steak</string>
		<key>number of encounters</key> <integer>9</integer>
		<key>start equipment treasures</key> <integer>4</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>highborn taskmaster</string>
				<string>soldier slave</string>
				<string>torchbearer slave</string>
			</array>
			<array>
				<string>highborn taskmaster</string>
				<string>soldier slave</string>
				<string>torchbearer slave</string>
			</array>
			<array>
				<string>highborn ritualist</string>
				<string>soldier slave</string>
				<string>soldier slave</string>
			</array>
			<array>
				<string>highborn ritualist</string>
				<string>torchbearer slave</string>
				<string>torchbearer slave</string>
			</array>
			<array>
				<string>great slime</string>
				<string>great slime</string>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
				<string>slime</string>
			</array>
		</array>
		<key>guardian type</key> <string>ritual guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: smash = burn > shock > cut -->
	<!-- player resistance ranking: burn > cut > shock > smash -->
	<!-- special features: ranged attacks, area of effect attacks, stuns, position-swapping, undodgeable attacks, delayed attacks, counter-attacks -->
	<!-- guardian: cut attack, cut casing -->
	<!-- ideal build: probably a warrior with hammer and shield; smash AoE damage for the slaves and blocks to avoid dazzle would both be good -->
	
	
	<!-- floor 9 -->
	<!-- theme: functional ancient eol ship -->
	<!-- enemy types: robots -->
	<!-- color: red -->
	<key>floor 9</key>
	<dict>
		<!-- appearance data -->
		<key>tileset</key> <string>ship</string>
		<key>default color</key> <string>tile stone red</string>
		<!-- map generation data -->
		<key>room size</key> <integer>5</integer>
		<key>rows</key> <integer>16</integer>
		<key>columns</key> <integer>4</integer>
		<key>reject undiscovered doors chance</key> <integer>20</integer>
		<key>max door offset</key> <integer>1</integer>
		<key>doors at a time</key> <integer>5</integer>
		<key>min non orphans</key> <integer>30</integer>
		<key>max non orphans</key> <integer>999</integer>
		<key>locked door chance</key> <integer>15</integer>
		<key>no door chance</key> <integer>75</integer>
		<key>desired path length</key> <integer>17</integer>
		<key>min doodads per room</key> <integer>1</integer>
		<key>max doodads per room</key> <integer>2</integer>
		<!-- cave generation data -->
		<key>cave wall chance</key> <integer>0</integer>
		<key>cave smooths</key> <integer>0</integer>
		<key>min floor tile percent</key> <integer>0</integer>
		<key>max floor tile percent</key> <integer>0</integer>
		<!-- map balance data -->
		<key>countdown</key> <integer>340</integer>
		<key>overtime countdown</key> <integer>50</integer>
		<key>equipment treasures</key> <integer>5</integer>
		<key>healing treasures</key> <integer>9</integer>
		<key>normal treasures</key> <integer>5</integer>
		<key>healing item</key> <string>ration</string>
		<key>number of encounters</key> <integer>11</integer>
		<key>start equipment treasures</key> <integer>4</integer>
		<key>encounters</key>
		<array>
			<array>
				<string>war bot</string>
				<string>war bot</string>
			</array>
			<array>
				<string>war bot</string>
				<string>scuttler</string>
				<string>scuttler</string>
			</array>
			<array>
				<string>war bot</string>
				<string>sentry</string>
				<string>sentry</string>
			</array>
			<array>
				<string>security android</string>
				<string>security android</string>
				<string>scout android</string>
				<string>scout android</string>
			</array>
		</array>
		<key>guardian type</key> <string>holy guardian</string>
	</dict>
	<!-- encounter analysis -->
	<!-- player attack element ranking: smash > shock > burn > cut -->
	<!-- player resistance ranking: shock > smash > cut > burn -->
	<!-- special features: ranged attacks, area of effect attacks, aoe interrupt, position-swapping, undodgeable attacks, delayed attacks -->
	<!-- guardian: shock attack, shock casing -->
	<!-- ideal build: since this is the last floor, honestly someone with holy soldier + sacred light + false prophet would be good; spam down everyone! -->
	
</dict>
</plist>